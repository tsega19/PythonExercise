class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
       # Create an empty dictionary to store previously seen numbers and their indices
        prevMap = {} 
        # Loop through the list of numbers along with their indices
        for i, n in enumerate(nums):
        # Calculate the difference between the target and the current number
            diff = target - n 
        # If the difference is found in the dictionary (meaning a pair that sums up to the target is found)
            if diff in prevMap:
        # Return the indices of the pair that sums up to the target
                return [prevMap[diff], i] 
        # Store the current number and its index in the dictionary for future reference
            prevMap[n] = i 
        # If no such pair is found, return an empty list
        return [] 
